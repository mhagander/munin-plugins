#!/usr/bin/env perl
#
# hpfan - Munin plugin for HP server fans
#
# Copyright (C) 2010 Magnus Hagander
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

=head1 NAME

hpfan - Munin plugin to monitor HP server fans

=head1 CONFIGURATION

The plugin needs to be able to execute /sbin/hplog -f, which requires
root permissions. The following configuration is needed:

  [hpfan]
  user=root

=head1 INTERPRETATION

The graphs will show the fan speeds at different locations
in the server.

=head1 MAGIC MARKERS

 #%# family=contrib

=head1 AUTHOR

Magnus Hagander <magnus@hagander.net>

=head1 LICENSE

GPLv2

=cut

use strict;
use warnings;

use Munin::Plugin;

if ( $ARGV[0] and $ARGV[0] eq "autoconf") {
   print "no\n";
   exit(0);
}

my @sensors;
open(HPLOG, "/sbin/hplog -f |") || die "Could not run hplog\n";
while (<HPLOG>) {
   next if /^\s*$/;
   next if /^ID/;
   if (/^\s*(\d+)\s*Var\. Speed\s+(\w\w+)\s+.*\(\s?(\d+)\)/) {
      print STDERR "regex match found: \$1:$1\n\$2:$2\n\$3:$3\n";
      push @sensors, {
         'id' => $1,
         'location' => $2,
         'fan_speed' => $3
      };
   }
   else {
      warn "Could not parse line $_";
   }
}
close(HPLOG);

if ( $ARGV[0] and $ARGV[0] eq "config") {
   print "graph_title HP fans\n";
   print "graph_category sensors\n";
   print "graph_vlabel % of Max\n";
   for my $sensor (@sensors) {
      print "s" . $sensor->{'id'} . ".label " . $sensor->{'location'} . "\n";
      print "s" . $sensor->{'id'} . ".type GAUGE\n";
      print "s" . $sensor->{'id'} . ".min 0\n";
      print "s" . $sensor->{'id'} . ".max 100\n";
      print "s" . $sensor->{'id'} . ".warning 10:90\n";
      print "s" . $sensor->{'id'} . ".critical 0:100\n";
   }
   exit(0);
}

for my $sensor (@sensors) {
    print "s" . $sensor->{'id'} . ".value " . $sensor->{'fan_speed'} . "\n";
}
